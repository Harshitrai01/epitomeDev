<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Custom_Notification_to_Users</name>
        <label>Send Custom Notification to Users</label>
        <locationX>314</locationX>
        <locationY>2039</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>get_Custom_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ownerIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Duplicate Lead Alert</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>NotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Parent_Lead__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <assignments>
        <name>assign_Lead_Owner</name>
        <label>assign Lead Owner</label>
        <locationX>732</locationX>
        <locationY>1379</locationY>
        <assignmentItems>
            <assignToReference>ownerIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loop_over_Opportunity.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_over_Opportunity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_the_Owner</name>
        <label>Assign the Owner</label>
        <locationX>1520</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>Get_Task.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Task_Owner_to_User</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Copy_2_of_Lead_capacity_Assignment</name>
        <label>Copy 1 of Copy 2 of Lead capacity Assignment</label>
        <locationX>992</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>capacity</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Capacity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_2_of_Lead_capacity_Assignment</name>
        <label>Copy 2 of Lead capacity Assignment</label>
        <locationX>1256</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>capacity</assignToReference>
            <operator>Subtract</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Capacity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Lead_capacity_Assignment</name>
        <label>Lead capacity Assignment</label>
        <locationX>1124</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>capacity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>get_user.Capacity__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Current_Load</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Lead_Owner_Assignment</name>
        <label>Lead Owner Assignment</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>ownerIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Parent_Lead__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>get_Related_Opportunity</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Current_Load</name>
        <label>Check Current Load</label>
        <locationX>1124</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Copy_2_of_Lead_capacity_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Current_load_is_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_user.Capacity__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Copy_2_of_Lead_capacity_Assignment</targetReference>
            </connector>
            <label>Current load is 0</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Duplicate</name>
        <label>Check Duplicate</label>
        <locationX>455</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_is_Duplicate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.isDuplicate__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Parent_Lead_Owner_is_queue</targetReference>
            </connector>
            <label>Lead is Duplicate</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Opportunity_is_null</name>
        <label>Check if Opportunity is null</label>
        <locationX>182</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>loop_over_Opportunity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Opportunity_is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Related_Opportunity</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_Owner_list_is_Null</targetReference>
            </connector>
            <label>Opportunity is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>check_if_Owner_in_List</name>
        <label>check if Owner in List</label>
        <locationX>710</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>Check_Opportunity_Owner_is_queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_in_List</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ownerIds</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>loop_over_Opportunity.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_over_Opportunity</targetReference>
            </connector>
            <label>Owner in List</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Owner_list_is_Null</name>
        <label>Check if Owner list is Null</label>
        <locationX>182</locationX>
        <locationY>1823</locationY>
        <defaultConnector>
            <targetReference>get_Custom_Notification</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_List_is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ownerIds</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Owner List is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Task_is_Null</name>
        <label>Check if Task is Null</label>
        <locationX>1652</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Task_is_not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_the_Owner</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Task is not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Opportunity_Owner_is_queue</name>
        <label>Check Opportunity Owner is queue</label>
        <locationX>864</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>loop_over_Opportunity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Opportunity_Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_over_Opportunity.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assign_Lead_Owner</targetReference>
            </connector>
            <label>Opportunity Owner is Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Parent_Lead_Owner_is_queue</name>
        <label>Check Parent Lead Owner is queue</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>get_Related_Opportunity</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Lead_Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent_Lead__r.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Lead_Owner_Assignment</targetReference>
            </connector>
            <label>Lead Owner is Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Lead_New_or_Updated</name>
        <label>Lead New or Updated</label>
        <locationX>1020</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Lead_Updated_Conditions</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Lead Updated</defaultConnectorLabel>
        <rules>
            <name>Lead_New</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Duplicate</targetReference>
            </connector>
            <label>Lead New</label>
        </rules>
    </decisions>
    <decisions>
        <name>Lead_Updated_Conditions</name>
        <label>Lead Updated Conditions</label>
        <locationX>1586</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Status_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unopened</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Unopened</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>get_user</targetReference>
            </connector>
            <label>Status Update</label>
        </rules>
        <rules>
            <name>Owner_Changed_to_User_in_Site_Visit_Scheduled_Status</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Site Visit Schedule</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task</targetReference>
            </connector>
            <label>Owner Changed to User in Site Visit Scheduled Status</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>Lead Record Triggered Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Lead Record Triggered Flow(After Flow)</label>
    <loops>
        <name>loop_over_Opportunity</name>
        <label>loop over Opportunity</label>
        <locationX>468</locationX>
        <locationY>1055</locationY>
        <collectionReference>get_Related_Opportunity</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>check_if_Owner_in_List</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_if_Owner_list_is_Null</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>get_Custom_Notification</name>
        <label>get Custom Notification</label>
        <locationX>314</locationX>
        <locationY>1931</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Custom_Notification_to_Users</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Lead_Assignment_Notification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Related_Opportunity</name>
        <label>get Related Opportunity</label>
        <locationX>182</locationX>
        <locationY>839</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Opportunity_is_null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Lead__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task</name>
        <label>Get Task</label>
        <locationX>1652</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Task_is_Null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhoId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_user</name>
        <label>get user</label>
        <locationX>1124</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Lead_capacity_Assignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Capacity</name>
        <label>Update Capacity</label>
        <locationX>1124</locationX>
        <locationY>1055</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Capacity__c</field>
            <value>
                <elementReference>capacity</elementReference>
            </value>
        </inputAssignments>
        <object>User</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Task_Owner_to_User</name>
        <label>Update Task Owner to User</label>
        <locationX>1520</locationX>
        <locationY>863</locationY>
        <inputReference>Get_Task</inputReference>
    </recordUpdates>
    <start>
        <locationX>894</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Lead_New_or_Updated</targetReference>
        </connector>
        <object>Lead</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>NotificationBody</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>A duplicate lead has been detected for {!$Record.Parent_Lead__r.Name}. Please review and take action to merge or delete the duplicate.
               Lead Details:Lead Source: {!$Record.LeadSource}
               Lead Sub-Source: {!$Record.Sub_Source__c}</text>
    </textTemplates>
    <variables>
        <name>capacity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>ownerIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
