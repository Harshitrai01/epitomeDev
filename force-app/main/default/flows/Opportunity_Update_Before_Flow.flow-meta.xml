<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <customErrors>
        <name>Add_Error</name>
        <label>Add Error</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <customErrorMessages>
            <errorMessage>Can&apos;t change stage to Dropped as the payment has been made</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Check_Collected_Amount_Condition</name>
        <label>Check Collected Amount Condition?</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Collected_Amount_is_not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Collected_Amount__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Error</targetReference>
            </connector>
            <label>Collected Amount is not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Decision</name>
        <label>Check Decision</label>
        <locationX>501</locationX>
        <locationY>287</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Stage_Change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Stage</targetReference>
            </connector>
            <label>Stage Change</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Stage</name>
        <label>Check Stage</label>
        <locationX>336</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Stage_is_Dropped</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.StageName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Lost/Dropped</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Collected_Amount_Condition</targetReference>
            </connector>
            <label>Stage is Dropped</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Opportunity Update(Before Flow) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity Update(Before Flow)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>375</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Decision</targetReference>
        </connector>
        <object>Opportunity</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
